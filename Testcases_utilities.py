'''
This file contains some functions used in the testing phase where I compared the values of the features 
I have in common with my supervisor as he extracted those features from a part of the datset provided
'''

from openpyxl import load_workbook


def extract_dataa(file):
    book = load_workbook(file)
    sheet = book.active
    rows = sheet.rows
    col = sheet.columns
    headers = [cell.value for cell in next(rows)]
    testdict = {}
    # print(headers)
    data = []
    next(rows)
    for i in range(len(headers)):
        col1 = [cell.value for cell in next(col)]
        col1 = col1[1::]
        data.append(col1)
    return data, headers


# find indexs of all occurances of each testcases[0] in mydata[0]
def extractcodetest(testcases, mydata):
    indexs = []
    result = []
    c = 0
    for i in range(len(mydata[0])):
        c += 1
        for j in testcases[0]:
            if j == mydata[0][i]:
                temp = []
                indexs.append(i)
                temp.append(mydata[0][i])
                temp.append(mydata[1][i])
                result.append(temp)
    return result


# make function to return a dictionary with testdict[mydata[0][i]] = [mydata[1][i],mydata[2][i]...]
def maketestdict(mydata):
    dict = {}
    for i in range(len(mydata[0])):
        temp = []
        for j in range(1, len(mydata)):
            temp.append(mydata[j][i])
        dict[mydata[0][i]] = temp
    return dict


def makedict(testcode):
    dict = {}
    # for i in range(len(testcode)):
    #dict[testcode[i][0]] = extract_testcases(concatenate(testcode[i][1]))
    return dict


# compute the percentage of change of 2 values
def changepercent(a, b):
    if a == 0:
        return 0
    else:
        return (b - a) / a * 100


# compute the diffreence between each element of 2 list and return a list of diffreences
def Listdiff(list1, list2):
    diff = []
    for i in range(len(list1)):
        diff.append(changepercent(list1[i], list2[i]))
    return diff


# go throught 2 dictionaries and compute the diffrence bettwen each dict element if they have the same key
def computediffrence(firstdict, seconddict):
    diff = {}
    for key in firstdict:
        if key in seconddict:
            diff[key] = Listdiff(firstdict[key], seconddict[key])
    return diff

# go throught 2 dictionaries and compute the diffrence bettwen each dict element if they have the same key and store the average diffrences in list of dict


def diff(dict1, dict2):
    diff = []
    for key in dict1:
        if key in dict2:
            temp = Listdiff(dict1[key], dict2[key])
            diff.append(temp)
    return diff


def avg_list(list, headers):
    result = []
    printable = []
    for j in range(len(list[0])):
        temp = 0
        h = headers[j+1]
        for i in list:
            temp += i[j]
        strl = h+" : "+str(temp/len(list))
        printable.append(strl)
        result.append(round(temp/len(list), 2))
    return result, printable
